// Code generated by protoc-gen-go. DO NOT EDIT.
// source: registry.proto

package registry

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type RegisterNSERequest struct {
	NetworkServiceName   string   `protobuf:"bytes,1,opt,name=network_service_name,json=networkServiceName,proto3" json:"network_service_name,omitempty"`
	NsmUrl               string   `protobuf:"bytes,2,opt,name=nsm_url,json=nsmUrl,proto3" json:"nsm_url,omitempty"`
	EndpointName         string   `protobuf:"bytes,3,opt,name=endpoint_name,json=endpointName,proto3" json:"endpoint_name,omitempty"`
	Payload              string   `protobuf:"bytes,4,opt,name=payload,proto3" json:"payload,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterNSERequest) Reset()         { *m = RegisterNSERequest{} }
func (m *RegisterNSERequest) String() string { return proto.CompactTextString(m) }
func (*RegisterNSERequest) ProtoMessage()    {}
func (*RegisterNSERequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_41af05d40a615591, []int{0}
}

func (m *RegisterNSERequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterNSERequest.Unmarshal(m, b)
}
func (m *RegisterNSERequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterNSERequest.Marshal(b, m, deterministic)
}
func (m *RegisterNSERequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterNSERequest.Merge(m, src)
}
func (m *RegisterNSERequest) XXX_Size() int {
	return xxx_messageInfo_RegisterNSERequest.Size(m)
}
func (m *RegisterNSERequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterNSERequest.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterNSERequest proto.InternalMessageInfo

func (m *RegisterNSERequest) GetNetworkServiceName() string {
	if m != nil {
		return m.NetworkServiceName
	}
	return ""
}

func (m *RegisterNSERequest) GetNsmUrl() string {
	if m != nil {
		return m.NsmUrl
	}
	return ""
}

func (m *RegisterNSERequest) GetEndpointName() string {
	if m != nil {
		return m.EndpointName
	}
	return ""
}

func (m *RegisterNSERequest) GetPayload() string {
	if m != nil {
		return m.Payload
	}
	return ""
}

type RegisterNSEResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterNSEResponse) Reset()         { *m = RegisterNSEResponse{} }
func (m *RegisterNSEResponse) String() string { return proto.CompactTextString(m) }
func (*RegisterNSEResponse) ProtoMessage()    {}
func (*RegisterNSEResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_41af05d40a615591, []int{1}
}

func (m *RegisterNSEResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterNSEResponse.Unmarshal(m, b)
}
func (m *RegisterNSEResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterNSEResponse.Marshal(b, m, deterministic)
}
func (m *RegisterNSEResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterNSEResponse.Merge(m, src)
}
func (m *RegisterNSEResponse) XXX_Size() int {
	return xxx_messageInfo_RegisterNSEResponse.Size(m)
}
func (m *RegisterNSEResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterNSEResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterNSEResponse proto.InternalMessageInfo

type RemoveNSERequest struct {
	EndpointName         string   `protobuf:"bytes,1,opt,name=endpoint_name,json=endpointName,proto3" json:"endpoint_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveNSERequest) Reset()         { *m = RemoveNSERequest{} }
func (m *RemoveNSERequest) String() string { return proto.CompactTextString(m) }
func (*RemoveNSERequest) ProtoMessage()    {}
func (*RemoveNSERequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_41af05d40a615591, []int{2}
}

func (m *RemoveNSERequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveNSERequest.Unmarshal(m, b)
}
func (m *RemoveNSERequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveNSERequest.Marshal(b, m, deterministic)
}
func (m *RemoveNSERequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveNSERequest.Merge(m, src)
}
func (m *RemoveNSERequest) XXX_Size() int {
	return xxx_messageInfo_RemoveNSERequest.Size(m)
}
func (m *RemoveNSERequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveNSERequest.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveNSERequest proto.InternalMessageInfo

func (m *RemoveNSERequest) GetEndpointName() string {
	if m != nil {
		return m.EndpointName
	}
	return ""
}

type RemoveNSEResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveNSEResponse) Reset()         { *m = RemoveNSEResponse{} }
func (m *RemoveNSEResponse) String() string { return proto.CompactTextString(m) }
func (*RemoveNSEResponse) ProtoMessage()    {}
func (*RemoveNSEResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_41af05d40a615591, []int{3}
}

func (m *RemoveNSEResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveNSEResponse.Unmarshal(m, b)
}
func (m *RemoveNSEResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveNSEResponse.Marshal(b, m, deterministic)
}
func (m *RemoveNSEResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveNSEResponse.Merge(m, src)
}
func (m *RemoveNSEResponse) XXX_Size() int {
	return xxx_messageInfo_RemoveNSEResponse.Size(m)
}
func (m *RemoveNSEResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveNSEResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveNSEResponse proto.InternalMessageInfo

type FindNetworkServiceRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FindNetworkServiceRequest) Reset()         { *m = FindNetworkServiceRequest{} }
func (m *FindNetworkServiceRequest) String() string { return proto.CompactTextString(m) }
func (*FindNetworkServiceRequest) ProtoMessage()    {}
func (*FindNetworkServiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_41af05d40a615591, []int{4}
}

func (m *FindNetworkServiceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindNetworkServiceRequest.Unmarshal(m, b)
}
func (m *FindNetworkServiceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindNetworkServiceRequest.Marshal(b, m, deterministic)
}
func (m *FindNetworkServiceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindNetworkServiceRequest.Merge(m, src)
}
func (m *FindNetworkServiceRequest) XXX_Size() int {
	return xxx_messageInfo_FindNetworkServiceRequest.Size(m)
}
func (m *FindNetworkServiceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FindNetworkServiceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FindNetworkServiceRequest proto.InternalMessageInfo

type FindNetworkServiceResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FindNetworkServiceResponse) Reset()         { *m = FindNetworkServiceResponse{} }
func (m *FindNetworkServiceResponse) String() string { return proto.CompactTextString(m) }
func (*FindNetworkServiceResponse) ProtoMessage()    {}
func (*FindNetworkServiceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_41af05d40a615591, []int{5}
}

func (m *FindNetworkServiceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindNetworkServiceResponse.Unmarshal(m, b)
}
func (m *FindNetworkServiceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindNetworkServiceResponse.Marshal(b, m, deterministic)
}
func (m *FindNetworkServiceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindNetworkServiceResponse.Merge(m, src)
}
func (m *FindNetworkServiceResponse) XXX_Size() int {
	return xxx_messageInfo_FindNetworkServiceResponse.Size(m)
}
func (m *FindNetworkServiceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FindNetworkServiceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FindNetworkServiceResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*RegisterNSERequest)(nil), "registry.RegisterNSERequest")
	proto.RegisterType((*RegisterNSEResponse)(nil), "registry.RegisterNSEResponse")
	proto.RegisterType((*RemoveNSERequest)(nil), "registry.RemoveNSERequest")
	proto.RegisterType((*RemoveNSEResponse)(nil), "registry.RemoveNSEResponse")
	proto.RegisterType((*FindNetworkServiceRequest)(nil), "registry.FindNetworkServiceRequest")
	proto.RegisterType((*FindNetworkServiceResponse)(nil), "registry.FindNetworkServiceResponse")
}

func init() { proto.RegisterFile("registry.proto", fileDescriptor_41af05d40a615591) }

var fileDescriptor_41af05d40a615591 = []byte{
	// 292 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x92, 0x4d, 0x4e, 0xc3, 0x30,
	0x10, 0x85, 0x95, 0x82, 0x5a, 0x3a, 0xfc, 0x08, 0xa6, 0xfc, 0x84, 0xb4, 0x48, 0xc8, 0x65, 0xc1,
	0xaa, 0x42, 0xb0, 0xe0, 0x02, 0xc0, 0x82, 0x45, 0x16, 0xa9, 0x58, 0x47, 0x81, 0x8c, 0x50, 0x44,
	0x6c, 0x07, 0xdb, 0x2d, 0xea, 0x19, 0xb8, 0x03, 0x67, 0x45, 0xb2, 0x93, 0x92, 0x90, 0xb6, 0xcb,
	0xc9, 0x37, 0x33, 0xef, 0xcd, 0x8b, 0xe1, 0x40, 0xd1, 0x7b, 0xa6, 0x8d, 0x5a, 0x4c, 0x0a, 0x25,
	0x8d, 0xc4, 0x9d, 0xaa, 0x66, 0x3f, 0x1e, 0x60, 0x64, 0x0b, 0x52, 0xe1, 0xf4, 0x31, 0xa2, 0xcf,
	0x19, 0x69, 0x83, 0x37, 0x70, 0x2c, 0xc8, 0x7c, 0x49, 0xf5, 0x11, 0x6b, 0x52, 0xf3, 0xec, 0x8d,
	0x62, 0x91, 0x70, 0xf2, 0xbd, 0x4b, 0xef, 0xba, 0x1f, 0x61, 0xc9, 0xa6, 0x0e, 0x85, 0x09, 0x27,
	0x3c, 0x83, 0x9e, 0xd0, 0x3c, 0x9e, 0xa9, 0xdc, 0xef, 0xd8, 0xa6, 0xae, 0xd0, 0xfc, 0x45, 0xe5,
	0x38, 0x86, 0x7d, 0x12, 0x69, 0x21, 0x33, 0x61, 0xdc, 0x8e, 0x2d, 0x8b, 0xf7, 0xaa, 0x8f, 0x76,
	0xda, 0x87, 0x5e, 0x91, 0x2c, 0x72, 0x99, 0xa4, 0xfe, 0xb6, 0xc5, 0x55, 0xc9, 0x4e, 0x60, 0xd0,
	0xf0, 0xa7, 0x0b, 0x29, 0x34, 0xb1, 0x7b, 0x38, 0x8c, 0x88, 0xcb, 0x39, 0xd5, 0x4c, 0xb7, 0x94,
	0xbc, 0xb6, 0x12, 0x1b, 0xc0, 0x51, 0x6d, 0xb0, 0xdc, 0x36, 0x84, 0xf3, 0xa7, 0x4c, 0xa4, 0x61,
	0xe3, 0xac, 0x72, 0x2d, 0x1b, 0x41, 0xb0, 0x0a, 0xba, 0xd1, 0xdb, 0xef, 0x0e, 0x9c, 0xfe, 0x47,
	0x2e, 0x5b, 0x7c, 0x86, 0xdd, 0x9a, 0x75, 0x1c, 0x4d, 0x96, 0x7f, 0xa1, 0x9d, 0x78, 0x70, 0xb1,
	0x86, 0x3a, 0x19, 0x7c, 0x80, 0xfe, 0xd2, 0x36, 0x06, 0xf5, 0xde, 0x66, 0x08, 0xc1, 0x70, 0x25,
	0x2b, 0xb7, 0xc4, 0x80, 0xed, 0x53, 0x70, 0xfc, 0x37, 0xb2, 0x36, 0x85, 0xe0, 0x6a, 0x73, 0x93,
	0x13, 0x78, 0xed, 0xda, 0xf7, 0x75, 0xf7, 0x1b, 0x00, 0x00, 0xff, 0xff, 0x9b, 0x46, 0x29, 0xc4,
	0x71, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// NetworkServiceRegistryClient is the client API for NetworkServiceRegistry service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type NetworkServiceRegistryClient interface {
	RegisterNSE(ctx context.Context, in *RegisterNSERequest, opts ...grpc.CallOption) (*RegisterNSEResponse, error)
	RemoveNSE(ctx context.Context, in *RemoveNSERequest, opts ...grpc.CallOption) (*RemoveNSEResponse, error)
	FindNetworkService(ctx context.Context, in *FindNetworkServiceRequest, opts ...grpc.CallOption) (*FindNetworkServiceResponse, error)
}

type networkServiceRegistryClient struct {
	cc *grpc.ClientConn
}

func NewNetworkServiceRegistryClient(cc *grpc.ClientConn) NetworkServiceRegistryClient {
	return &networkServiceRegistryClient{cc}
}

func (c *networkServiceRegistryClient) RegisterNSE(ctx context.Context, in *RegisterNSERequest, opts ...grpc.CallOption) (*RegisterNSEResponse, error) {
	out := new(RegisterNSEResponse)
	err := c.cc.Invoke(ctx, "/registry.NetworkServiceRegistry/RegisterNSE", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *networkServiceRegistryClient) RemoveNSE(ctx context.Context, in *RemoveNSERequest, opts ...grpc.CallOption) (*RemoveNSEResponse, error) {
	out := new(RemoveNSEResponse)
	err := c.cc.Invoke(ctx, "/registry.NetworkServiceRegistry/RemoveNSE", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *networkServiceRegistryClient) FindNetworkService(ctx context.Context, in *FindNetworkServiceRequest, opts ...grpc.CallOption) (*FindNetworkServiceResponse, error) {
	out := new(FindNetworkServiceResponse)
	err := c.cc.Invoke(ctx, "/registry.NetworkServiceRegistry/FindNetworkService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// NetworkServiceRegistryServer is the server API for NetworkServiceRegistry service.
type NetworkServiceRegistryServer interface {
	RegisterNSE(context.Context, *RegisterNSERequest) (*RegisterNSEResponse, error)
	RemoveNSE(context.Context, *RemoveNSERequest) (*RemoveNSEResponse, error)
	FindNetworkService(context.Context, *FindNetworkServiceRequest) (*FindNetworkServiceResponse, error)
}

func RegisterNetworkServiceRegistryServer(s *grpc.Server, srv NetworkServiceRegistryServer) {
	s.RegisterService(&_NetworkServiceRegistry_serviceDesc, srv)
}

func _NetworkServiceRegistry_RegisterNSE_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterNSERequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NetworkServiceRegistryServer).RegisterNSE(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/registry.NetworkServiceRegistry/RegisterNSE",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NetworkServiceRegistryServer).RegisterNSE(ctx, req.(*RegisterNSERequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NetworkServiceRegistry_RemoveNSE_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveNSERequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NetworkServiceRegistryServer).RemoveNSE(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/registry.NetworkServiceRegistry/RemoveNSE",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NetworkServiceRegistryServer).RemoveNSE(ctx, req.(*RemoveNSERequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NetworkServiceRegistry_FindNetworkService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FindNetworkServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NetworkServiceRegistryServer).FindNetworkService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/registry.NetworkServiceRegistry/FindNetworkService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NetworkServiceRegistryServer).FindNetworkService(ctx, req.(*FindNetworkServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _NetworkServiceRegistry_serviceDesc = grpc.ServiceDesc{
	ServiceName: "registry.NetworkServiceRegistry",
	HandlerType: (*NetworkServiceRegistryServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RegisterNSE",
			Handler:    _NetworkServiceRegistry_RegisterNSE_Handler,
		},
		{
			MethodName: "RemoveNSE",
			Handler:    _NetworkServiceRegistry_RemoveNSE_Handler,
		},
		{
			MethodName: "FindNetworkService",
			Handler:    _NetworkServiceRegistry_FindNetworkService_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "registry.proto",
}
